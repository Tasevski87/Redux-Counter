{"version":3,"sources":["components/Counter.module.css","components/Header.module.css","components/UserProfile.module.css","store/counter.js","components/Counter.js","store/auth.js","components/Header.js","components/Auth.js","components/UserProfile.js","App.js","store/index.js","index.js","components/Auth.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActions","actions","Counter","dispatch","useDispatch","useSelector","show","className","classes","value","onClick","authSlice","isAuthenticated","login","logout","authActions","Header","isAuth","auth","header","href","Auth","onSubmit","event","preventDefault","control","htmlFor","type","id","UserProfile","profile","App","store","configureStore","reducer","counterReducer","authReducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,8GCItBC,EAAeC,YAAY,CAC7BC,KAAM,UACNC,aAJwB,CAAEC,QAAS,EAAGC,aAAa,GAKnDC,SAAU,CACNC,UADM,SACIC,GACNA,EAAMJ,WAEVK,UAJM,SAIID,GACNA,EAAMJ,WAEVM,SAPM,SAOGF,EAAOG,GACZH,EAAMJ,QAAUI,EAAMJ,QAAUO,EAAOC,SAE3CC,cAVM,SAUQL,GACVA,EAAMH,aAAeG,EAAMH,gBAK1BS,EAAiBd,EAAae,QAE5Bf,IAAf,Q,wBCeegB,EApCC,WACd,IAAMC,EAAWC,cACbd,EAAUe,aAAY,SAAAX,GAAK,OAAIA,EAAMJ,QAAQA,WAE7CgB,EAAOD,aAAY,SAAAX,GAAK,OAAIA,EAAMJ,QAAQC,eAkB9C,OACE,uBAAMgB,UAAWC,IAAQlB,QAAzB,UACE,+CACCgB,GAAQ,qBAAKC,UAAWC,IAAQC,MAAxB,SAAgCnB,IACzC,gCACE,wBAAQoB,QArBS,WACvBP,EAASH,EAAeP,cAoBlB,uBACA,wBAAQiB,QAlBQ,WACtBP,EAASH,EAAeJ,SAAS,KAiB3B,2BACA,wBAAQc,QAfS,WACvBP,EAASH,EAAeL,cAclB,0BAEF,wBAAQe,QAbiB,WAC3BP,EAASH,EAAeD,kBAYtB,gC,iBC7BAY,EAAYxB,YAAY,CAC1BC,KAAM,iBACNC,aANqB,CACrBuB,iBAAiB,GAMjBpB,SAAU,CACNqB,MADM,SACAnB,GACFA,EAAMkB,iBAAkB,GAE5BE,OAJM,SAICpB,GACHA,EAAMkB,iBAAkB,MAKvBG,EAAcJ,EAAUV,QAEtBU,IAAf,QCaeK,EA9BA,WACb,IAAMb,EAAWC,cACXa,EAASZ,aAAY,SAAAX,GAAK,OAAIA,EAAMwB,KAAKN,mBAM/C,OACE,yBAAQL,UAAWC,IAAQW,OAA3B,UACE,4CACCF,GACC,8BACE,+BACE,6BACE,mBAAGG,KAAK,IAAR,2BAEF,6BACE,mBAAGA,KAAK,IAAR,wBAEF,6BACE,wBAAQV,QAjBE,WAEpBP,EAASY,EAAYD,WAeX,+B,gBCMCO,EA3BF,WACX,IAAMlB,EAAWC,cAOjB,OACE,sBAAMG,UAAWC,IAAQU,KAAzB,SACE,kCACE,uBAAMI,SARS,SAACC,GACpBA,EAAMC,iBAENrB,EAASY,EAAYF,UAKjB,UACE,sBAAKN,UAAWC,IAAQiB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,GAAG,aAEzB,sBAAKrB,UAAWC,IAAQiB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,GAAG,gBAE5B,mD,iBCfKC,EARK,WAClB,OACE,sBAAMtB,UAAWC,IAAQsB,QAAzB,SACE,oDCgBSC,MAZf,WACE,IAAMd,EAASZ,aAAY,SAAAX,GAAK,OAAIA,EAAMwB,KAAKN,mBAC/C,OACE,eAAC,WAAD,WACE,cAAC,EAAD,KACEK,GAAU,cAAC,EAAD,IACXA,GAAU,cAAC,EAAD,IACX,cAAC,EAAD,QCsBSe,EALDC,YAAe,CACzBC,QAAS,CAAE5C,QAAS6C,EAAgBjB,KAAMkB,KC1BjCC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SAAwB,cAAC,EAAD,Q,kBCRpChD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,yB","file":"static/js/main.6fe12cc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1U4hj\",\"value\":\"Counter_value__2JpT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1BiAu\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialCounterState = { counter: 0, showCounter: true }\n\nconst counterSlice = createSlice({\n    name: \"counter\",\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter\n        }\n    }\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default counterSlice.reducer;","// import { Component } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { counterActions } from '../store/counter';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\nconst counter = useSelector(state => state.counter.counter);\n\nconst show = useSelector(state => state.counter.showCounter);\n\nconst incrementHandler = () => {\n  dispatch(counterActions.increment());\n};\n\nconst increaseHandler = () => {\n  dispatch(counterActions.increase(5));\n}\n\nconst decrementHandler = () => {\n  dispatch(counterActions.decrement());\n}; \n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n\n//   incrementHandler() {\n//     this.props.increment();\n//   };\n\n//   decrementHandler() {\n//     this.props.decrement();\n//   };\n\n//   toggleCounterHandler() { };\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   }\n// }\n// const mapToDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({ type: \"increment \" }),\n//     decrement: () => dispatch({ type: \"decrement \" })\n//   }\n// };\n\n\n// export default connect(mapStateToProps, mapToDispatchToProps)(Counter);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialAuthState = {\n    isAuthenticated: false\n}\n\nconst authSlice = createSlice({\n    name: \"authentication\",\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        }\n    }\n});\n\nexport const authActions = authSlice.actions;\n\nexport default authSlice.reducer;","import { useSelector, useDispatch } from 'react-redux';\n\nimport classes from './Header.module.css';\nimport { authActions } from '../store/auth';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n\n  const logOutHandler = () => {\n\n    dispatch(authActions.logout());\n  }\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      {isAuth && (\n        <nav>\n          <ul>\n            <li>\n              <a href='/'>My Products</a>\n            </li>\n            <li>\n              <a href='/'>My Sales</a>\n            </li>\n            <li>\n              <button onClick={logOutHandler}>Logout</button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import { useDispatch } from 'react-redux';\n\nimport classes from './Auth.module.css';\nimport { authActions } from '../store/auth';\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n\n  const logInHandler = (event) => {\n    event.preventDefault();\n\n    dispatch(authActions.login());\n  };\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={logInHandler}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { Fragment } from 'react';\nimport {useSelector} from \"react-redux\";\n\nimport Counter from './components/Counter';\nimport Header from \"./components/Header\";\nimport Auth from \"./components/Auth\";\nimport UserProfile from \"./components/UserProfile\";\n\n\nfunction App() {\n  const isAuth = useSelector(state => state.auth.isAuthenticated)\n  return (\n    <Fragment>\n      <Header />\n      {!isAuth && <Auth />}\n      {isAuth && <UserProfile />}\n      <Counter />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport counterReducer from \"./counter\";\nimport authReducer from \"./auth\";\n\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === \"increment\") {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n//         if (action.type === \"decrement\") {\n//             return {\n//                 counter: state.counter - 1,\n//                 showCounter: state.showCounter\n//             }\n//         }\n//         if(action.type === \"toggle\") {\n//             return {\n//                 showCounter: !state.showCounter,\n//                 counter: state.counter\n//             }\n//         }\n//         return state;\n//     };\n\nconst store = configureStore({\n    reducer: { counter: counterReducer, auth: authReducer },\n});\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {Provider} from \"react-redux\";\n\nimport './index.css';\nimport App from './App';\nimport store from \"./store/index\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Provider store={store}><App /></Provider>);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3QLaR\",\"control\":\"Auth_control__3bkp4\"};"],"sourceRoot":""}